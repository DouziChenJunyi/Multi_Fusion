{"remainingRequest":"/Users/chenjunyi/Documents/HBuilderProjects/gooselab_vue2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenjunyi/Documents/HBuilderProjects/gooselab_vue2/src/components/MultiSource.vue?vue&type=template&id=5da34298&scoped=true&","dependencies":[{"path":"/Users/chenjunyi/Documents/HBuilderProjects/gooselab_vue2/src/components/MultiSource.vue","mtime":1629772484611},{"path":"/Users/chenjunyi/Documents/HBuilderProjects/gooselab_vue2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenjunyi/Documents/HBuilderProjects/gooselab_vue2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/chenjunyi/Documents/HBuilderProjects/gooselab_vue2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenjunyi/Documents/HBuilderProjects/gooselab_vue2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}