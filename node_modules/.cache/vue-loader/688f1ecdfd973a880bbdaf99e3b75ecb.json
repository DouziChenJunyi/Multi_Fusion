{"remainingRequest":"/Users/chenjunyi/Documents/HBuilderProjects/gooselab_vue2_826finish/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenjunyi/Documents/HBuilderProjects/gooselab_vue2_826finish/src/components/MultiSource.vue?vue&type=template&id=ad227032&scoped=true&","dependencies":[{"path":"/Users/chenjunyi/Documents/HBuilderProjects/gooselab_vue2_826finish/src/components/MultiSource.vue","mtime":1631253333524},{"path":"/Users/chenjunyi/Documents/HBuilderProjects/gooselab_vue2_826finish/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenjunyi/Documents/HBuilderProjects/gooselab_vue2_826finish/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/chenjunyi/Documents/HBuilderProjects/gooselab_vue2_826finish/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenjunyi/Documents/HBuilderProjects/gooselab_vue2_826finish/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}